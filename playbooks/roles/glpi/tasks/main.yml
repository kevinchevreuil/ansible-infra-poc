---
- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ role_name }}"

- name: Download the GLPI latest release
  ansible.builtin.get_url:
    url: https://github.com/glpi-project/glpi/releases/download/{{ glpi_version }}/glpi-{{ glpi_version }}.tgz
    dest: /tmp

- name: Extract glpi.tgz into /srv/glpi
  ansible.builtin.unarchive:
    src: /tmp/glpi-{{ glpi_version }}.tgz
    dest: /srv/
    remote_src: true
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
    mode: "0755"

- name: Installation of required packages
  ansible.builtin.apt:
    pkg:
    - python3-mysqldb
    - mariadb-server
    - php-mysql
    - php-json
    - php-curl
    - php-gd
    - php-intl
    - php-ldap
    - php-bz2
    - php-zip
    - php-mbstring
    - php-xml

- name: Start and enable the mariadb service
  ansible.builtin.service:
    name: mariadb
    state: started
    enabled: true

- name: Installation of the glpi configuration
  ansible.builtin.copy:
    src: glpi
    dest: /etc/nginx/sites-available/
    owner: root
    group: root
    mode: "0644"
  notify: Reload nginx

- name: Activation of the GLPI website
  ansible.builtin.file:
    src: /etc/nginx/sites-available/glpi
    dest: /etc/nginx/sites-enabled/glpi
    owner: root
    group: root
    state: link
  notify: Reload nginx

- name: Add the TLS cert for GLPI
  ansible.builtin.copy:
    src: glpi.exo-industries.xyz.crt
    dest: /etc/ssl/certs/
    owner: root
    group: root
    mode: "0640"
  notify:
    - Restart nginx

- name: Add the TLS key for GLPI
  ansible.builtin.copy:
    src: glpi.exo-industries.xyz.key
    dest: /etc/ssl/private/
    owner: root
    group: root
    mode: "0600"
  notify:
    - Restart nginx

- name: Delete default databases
  mysql_db:
    name: sys
    state: absent

- name: Removes anonymous user account for localhost
  mysql_user:
    name: ''
    host: localhost
    state: absent

- name: Removes all anonymous user accounts
  mysql_user:
    name: ''
    host_all: yes
    state: absent

- name: Create the database
  mysql_db:
    name: "{{ glpi_db }}"
    state: present

- name: Create database user and password with all database privileges
  mysql_user:
    name: "{{ glpi_dbuser }}"
    password: "{{ glpi_dbpasswd }}"
    priv: '*.*:ALL'
    state: present
